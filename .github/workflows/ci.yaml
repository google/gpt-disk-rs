# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 <LICENSE-APACHE or
# https://www.apache.org/licenses/LICENSE-2.0> or the MIT license
# <LICENSE-MIT or https://opensource.org/licenses/MIT>, at your
# option. This file may not be copied, modified, or distributed
# except according to those terms.

on:
  push:
    branches:
      - main
  pull_request:
  schedule:
    - cron: '0 0 * * 0'

name: CI

env:
  RUSTFLAGS: "-D warnings"

jobs:
  msrv:
    name: MSRV
    runs-on: ubuntu-latest
    env:
      rust_version: "1.68"
      CARGO_REGISTRIES_CRATES_IO_PROTOCOL: sparse
    steps:
      - uses: actions/checkout@v4
      - run: rustup toolchain install $rust_version --profile minimal --no-self-update
      - run: rustup default $rust_version
      - uses: Swatinem/rust-cache@v2
      - run: rustc --version
      - run: cargo test --all-features

  check:
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - run: cargo check

  test-uguid:
    name: Test uguid
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - run: |
          cargo xtask test_uguid

  test-gpt-disk-types:
    name: Test gpt_disk_types
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - run: cargo xtask test_gpt_disk_types

  test-gpt-disk-io:
    name: Test gpt_disk_io
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - run: cargo xtask test_gpt_disk_io

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: cargo fmt --all -- --check --config format_code_in_doc_comments=true

  doc:
    name: Docs
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: Swatinem/rust-cache@v2
      - run: cargo doc --all-features
        env:
          RUSTDOCFLAGS: -Dwarnings

  cargo-deny:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: EmbarkStudios/cargo-deny-action@v1

  coverage:
    runs-on: ubuntu-latest
    env:
      CARGO_TERM_COLOR: always
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        run: rustup toolchain install stable --component llvm-tools-preview
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov
      - name: Generate code coverage
        run: cargo llvm-cov --all-features --workspace --exclude xtask --lcov --output-path lcov.info
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: lcov.info
          fail_ci_if_error: true

  spellcheck:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - uses: crate-ci/typos@v1.16.17
